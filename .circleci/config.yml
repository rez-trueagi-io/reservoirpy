# This code is licensed from CircleCI to the user under the MIT license.
# See here for details: https://circleci.com/developer/orbs/licensing
version: 2.1
description: |
    Utilize Setup Workflows and the Continuation orb to easily construct dynamic and multi-config pipelines.
display:
    home_url: https://circleci.com/docs/2.0/dynamic-config/
    source_url: https://github.com/CircleCI-Public/continuation-orb/
commands:
    continue:
        description: |
            Makes a post request to https://circleci.com/api/v2/pipeline/continue to continue a setup workflow.
        parameters:
            circleci_domain:
                default: circleci.com
                description: The domain of the CircleCI installation - defaults to circleci.com. (Only necessary for CircleCI Server users)
                type: string
            configuration_path:
                description: The path to the configuration that will be passed to the continue API
                type: string
            parameters:
                default: '{}'
                description: The parameters used for the pipeline. This can either be a JSON object containing parameters or a path to a file containing a JSON object with parameters
                type: string
            when:
                default: on_success
                description: Specify when to enable or disable this command
                enum:
                    - on_success
                    - on_fail
                    - always
                type: enum
        steps:
            - run:
                command: |
                    #!/bin/sh

                    set -e

                    if [ -z "${CIRCLE_CONTINUATION_KEY}" ]; then
                        echo "CIRCLE_CONTINUATION_KEY is required. Make sure setup workflows are enabled."
                        exit 1
                    fi

                    if [ -z "${CONFIG_PATH}" ]; then
                        echo "CONFIG_PATH is required."
                        exit 1
                    fi

                    if ! which curl > /dev/null; then
                        echo "curl is required to use this command"
                        exit 1
                    fi

                    if ! which jq > /dev/null; then
                        echo "jq is required to use this command"
                        exit 1
                    fi

                    PARAMS=$([ -f "$PARAMETERS" ] && cat "$PARAMETERS" || echo "$PARAMETERS")
                    COMMAND=$(echo "$PARAMS" | jq . >/dev/null 2>&1)

                    if ! $COMMAND; then
                        echo "PARAMETERS aren't valid json"
                        exit 1
                    fi

                    mkdir -p /tmp/circleci
                    rm -rf /tmp/circleci/continue_post.json

                    # Escape the config as a JSON string.
                    jq -Rs '.' "$CONFIG_PATH" > /tmp/circleci/config-string.json

                    jq -n \
                        --arg continuation "$CIRCLE_CONTINUATION_KEY" \
                        --arg params "$PARAMS" \
                        --slurpfile config /tmp/circleci/config-string.json \
                        '{"continuation-key": $continuation, "configuration": $config|join("\n"), "parameters": $params|fromjson}' > /tmp/circleci/continue_post.json

                    cat /tmp/circleci/continue_post.json

                    [ "$(curl \
                            -o /dev/stderr \
                            -w '%{http_code}' \
                            -XPOST \
                            -H "Content-Type: application/json" \
                            -H "Accept: application/json"  \
                            --data @/tmp/circleci/continue_post.json \
                            "https://${CIRCLECI_DOMAIN}/api/v2/pipeline/continue")" \
                       -eq 200 ]
                environment:
                    CIRCLECI_DOMAIN: <<parameters.circleci_domain>>
                    CONFIG_PATH: <<parameters.configuration_path>>
                    PARAMETERS: <<parameters.parameters>>
                name: Continue Pipeline
                when: <<parameters.when>>
    finish:
        description: |
            Makes a post request to https://circleci.com/api/v2/pipeline/continue with an empty config to advance the pipeline, but not execute any further workflows, preventing other continuations.
        parameters:
            circleci_domain:
                default: circleci.com
                description: The domain of the CircleCI installation - defaults to circleci.com. (Only necessary for CircleCI Server users)
                type: string
        steps:
            - run:
                command: |
                    if ! which curl > /dev/null; then
                        echo "curl is required to use this command"
                        exit 1
                    fi

                    if ! which jq > /dev/null; then
                        echo "jq is required to use this command"
                        exit 1
                    fi

                    JSON_BODY=$( jq -n \
                      --arg continuation "$CIRCLE_CONTINUATION_KEY" \
                      '{"continuation-key": $continuation, "configuration": "{version: 2, jobs: {}, workflows: {version: 2}}", parameters: {}}'
                    )
                    echo "$JSON_BODY"

                    [[ $(curl \
                            -o /dev/stderr \
                            -w '%{http_code}' \
                            -XPOST \
                            -H "Content-Type: application/json" \
                            -H "Accept: application/json"  \
                            --data "${JSON_BODY}" \
                            "https://${CIRCLECI_DOMAIN}/api/v2/pipeline/continue") \
                       -eq 200 ]]
                environment:
                    CIRCLECI_DOMAIN: <<parameters.circleci_domain>>
                name: Finish Pipeline
executors:
    default:
        description: |
            The executor for continuations
        docker:
            - image: cimg/base:<<parameters.tag>>
        parameters:
            tag:
                default: stable
                description: |
                    Pick a specific circleci/base image variant: https://hub.docker.com/r/cimg/base/tags
                type: string
jobs:
    continue:
        description: |
            Make a request to the API to continue the pipeline.
        executor: default
        parameters:
            checkout:
                default: true
                description: Whether to run an optional checkout step before continuing
                type: boolean
            circleci_domain:
                default: circleci.com
                description: The domain of the CircleCI installation - defaults to circleci.com. (Only necessary for CircleCI Server users)
                type: string
            configuration_path:
                description: The path to the configuration that will be passed to the continue API
                type: string
            parameters:
                default: '{}'
                description: The parameters used for the pipeline. This can either be a JSON object containing parameters or a path to a file containing a JSON object with parameters
                type: string
            resource_class:
                default: small
                description: Resource class to use
                type: string
            workspace_path:
                default: ""
                description: Path to attach the workspace to
                type: string
        resource_class: << parameters.resource_class >>
        steps:
            - when:
                condition:
                    equal:
                        - true
                        - << parameters.checkout >>
                steps:
                    - checkout
            - when:
                condition:
                    not:
                        equal:
                            - ""
                            - << parameters.workspace_path >>
                steps:
                    - attach_workspace:
                        at: << parameters.workspace_path >>
            - continue:
                circleci_domain: << parameters.circleci_domain >>
                configuration_path: << parameters.configuration_path >>
                parameters: << parameters.parameters >>
examples:
    continue_pipeline:
        description: |
            Utilize the "continue" job to specify which configuration file to run next.
        usage:
            version: "2.1"
            setup: true
            orbs:
                continuation: circleci/continuation@0.5.0
            workflows:
                use-my-orb:
                    jobs:
                        - continuation/continue:
                            configuration_path: .circleci/continue_config.yml
    continue_pipeline_with_parameters:
        description: |
            Utilize the "continue" job to specify which configuration file to run next and add additional parameters.
        usage:
            version: "2.1"
            setup: true
            orbs:
                continuation: circleci/continuation@0.5.0
            workflows:
                use-my-orb:
                    jobs:
                        - continuation/continue:
                            configuration_path: .circleci/continue_config.yml
                            parameters: '{"image-tag":"current"}'


